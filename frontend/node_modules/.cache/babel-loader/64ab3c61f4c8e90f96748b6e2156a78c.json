{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchModel } from \"../../lib/fetchModelData\";\nimport { Link } from \"react-router-dom\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchModel(\"/user/list\").then(async data => {\n      const usersWithCounts = await Promise.all((data || []).map(async user => {\n        const photos = await fetchModel(`/photos/photosOfUser/${user._id}`);\n        const photoCount = photos ? photos.length : 0;\n        const commentCount = photos ? photos.reduce((sum, p) => sum + p.comments.filter(c => c.user._id === user._id).length, 0) : 0;\n        return {\n          ...user,\n          photoCount,\n          commentCount\n        };\n      }));\n      setUsers(usersWithCounts);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h2\", null, \"Danh sách người dùng\"), /*#__PURE__*/React.createElement(\"ul\", null, users.map(user => /*#__PURE__*/React.createElement(\"li\", {\n    key: user._id,\n    style: {\n      marginBottom: \"10px\"\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/user/${user._id}`\n  }, `${user.first_name} ${user.last_name}`), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"green\",\n      marginLeft: \"10px\"\n    }\n  }, ` (${user.photoCount})`), /*#__PURE__*/React.createElement(Link, {\n    to: `/comments/${user._id}`\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\",\n      marginLeft: \"5px\"\n    }\n  }, ` (${user.commentCount})`))))));\n};\n_s(UserList, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","fetchModel","Link","UserList","_s","users","setUsers","then","data","usersWithCounts","Promise","all","map","user","photos","_id","photoCount","length","commentCount","reduce","sum","p","comments","filter","c","createElement","key","style","marginBottom","to","first_name","last_name","color","marginLeft","_c","$RefreshReg$"],"sources":["I:/CODE/LTW/TH3/photo-sharing-app/frontend/src/components/UserList/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchModel } from \"../../lib/fetchModelData\";\nimport { Link } from \"react-router-dom\";\n\nconst UserList = () => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchModel(\"/user/list\").then(async (data) => {\n      const usersWithCounts = await Promise.all(\n        (data || []).map(async (user) => {\n          const photos = await fetchModel(`/photos/photosOfUser/${user._id}`);\n          const photoCount = photos ? photos.length : 0;\n          const commentCount = photos\n            ? photos.reduce(\n                (sum, p) =>\n                  sum +\n                  p.comments.filter((c) => c.user._id === user._id).length,\n                0\n              )\n            : 0;\n          return { ...user, photoCount, commentCount };\n        })\n      );\n      setUsers(usersWithCounts);\n    });\n  }, []);\n\n  return React.createElement(\n    \"div\",\n    null,\n    React.createElement(\"h2\", null, \"Danh sách người dùng\"),\n    React.createElement(\n      \"ul\",\n      null,\n      users.map((user) =>\n        React.createElement(\n          \"li\",\n          { key: user._id, style: { marginBottom: \"10px\" } },\n          React.createElement(\n            Link,\n            { to: `/user/${user._id}` },\n            `${user.first_name} ${user.last_name}`\n          ),\n          React.createElement(\n            \"span\",\n            { style: { color: \"green\", marginLeft: \"10px\" } },\n            ` (${user.photoCount})`\n          ),\n          React.createElement(\n            Link,\n            { to: `/comments/${user._id}` },\n            React.createElement(\n              \"span\",\n              { style: { color: \"red\", marginLeft: \"5px\" } },\n              ` (${user.commentCount})`\n            )\n          )\n        )\n      )\n    )\n  );\n};\n\nexport default UserList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdC,UAAU,CAAC,YAAY,CAAC,CAACM,IAAI,CAAC,MAAOC,IAAI,IAAK;MAC5C,MAAMC,eAAe,GAAG,MAAMC,OAAO,CAACC,GAAG,CACvC,CAACH,IAAI,IAAI,EAAE,EAAEI,GAAG,CAAC,MAAOC,IAAI,IAAK;QAC/B,MAAMC,MAAM,GAAG,MAAMb,UAAU,CAAC,wBAAwBY,IAAI,CAACE,GAAG,EAAE,CAAC;QACnE,MAAMC,UAAU,GAAGF,MAAM,GAAGA,MAAM,CAACG,MAAM,GAAG,CAAC;QAC7C,MAAMC,YAAY,GAAGJ,MAAM,GACvBA,MAAM,CAACK,MAAM,CACX,CAACC,GAAG,EAAEC,CAAC,KACLD,GAAG,GACHC,CAAC,CAACC,QAAQ,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACX,IAAI,CAACE,GAAG,KAAKF,IAAI,CAACE,GAAG,CAAC,CAACE,MAAM,EAC1D,CACF,CAAC,GACD,CAAC;QACL,OAAO;UAAE,GAAGJ,IAAI;UAAEG,UAAU;UAAEE;QAAa,CAAC;MAC9C,CAAC,CACH,CAAC;MACDZ,QAAQ,CAACG,eAAe,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOX,KAAK,CAAC2B,aAAa,CACxB,KAAK,EACL,IAAI,eACJ3B,KAAK,CAAC2B,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,sBAAsB,CAAC,eACvD3B,KAAK,CAAC2B,aAAa,CACjB,IAAI,EACJ,IAAI,EACJpB,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACbf,KAAK,CAAC2B,aAAa,CACjB,IAAI,EACJ;IAAEC,GAAG,EAAEb,IAAI,CAACE,GAAG;IAAEY,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAO;EAAE,CAAC,eAClD9B,KAAK,CAAC2B,aAAa,CACjBvB,IAAI,EACJ;IAAE2B,EAAE,EAAE,SAAShB,IAAI,CAACE,GAAG;EAAG,CAAC,EAC3B,GAAGF,IAAI,CAACiB,UAAU,IAAIjB,IAAI,CAACkB,SAAS,EACtC,CAAC,eACDjC,KAAK,CAAC2B,aAAa,CACjB,MAAM,EACN;IAAEE,KAAK,EAAE;MAAEK,KAAK,EAAE,OAAO;MAAEC,UAAU,EAAE;IAAO;EAAE,CAAC,EACjD,KAAKpB,IAAI,CAACG,UAAU,GACtB,CAAC,eACDlB,KAAK,CAAC2B,aAAa,CACjBvB,IAAI,EACJ;IAAE2B,EAAE,EAAE,aAAahB,IAAI,CAACE,GAAG;EAAG,CAAC,eAC/BjB,KAAK,CAAC2B,aAAa,CACjB,MAAM,EACN;IAAEE,KAAK,EAAE;MAAEK,KAAK,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAM;EAAE,CAAC,EAC9C,KAAKpB,IAAI,CAACK,YAAY,GACxB,CACF,CACF,CACF,CACF,CACF,CAAC;AACH,CAAC;AAACd,EAAA,CA1DID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA4Dd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}