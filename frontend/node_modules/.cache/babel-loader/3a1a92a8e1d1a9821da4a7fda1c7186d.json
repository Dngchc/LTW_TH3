{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchModel } from \"../../lib/fetchModelData\";\nimport { Link } from \"react-router-dom\";\nconst UserComments = ({\n  userId,\n  isLoggedIn\n}) => {\n  _s();\n  const [commentsWithPhotos, setCommentsWithPhotos] = useState([]);\n  const [commentText, setCommentText] = useState(\"\");\n  const [selectedPhotoId, setSelectedPhotoId] = useState(null);\n  useEffect(() => {\n    fetchModel(`/photos/photosOfUser/${userId}`).then(data => {\n      const comments = [];\n      (data || []).forEach(photo => {\n        photo.comments.forEach(comment => {\n          if (comment.user._id === userId) {\n            comments.push({\n              ...comment,\n              photo\n            });\n          }\n        });\n      });\n      setCommentsWithPhotos(comments);\n    });\n  }, [userId]);\n  const handleImageError = e => {\n    e.target.src = \"https://via.placeholder.com/100\";\n  };\n  const handleCommentSubmit = photoId => {\n    if (!isLoggedIn) {\n      alert(\"Vui lòng đăng nhập để bình luận.\");\n      return;\n    }\n    console.log(`Gửi bình luận \"${commentText}\" cho ảnh ${photoId}`);\n    setCommentText(\"\");\n    setSelectedPhotoId(null);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h2\", null, \"Bình luận của người dùng\"), commentsWithPhotos.length === 0 ? /*#__PURE__*/React.createElement(\"p\", null, \"Không có bình luận nào.\") : commentsWithPhotos.map(comment => /*#__PURE__*/React.createElement(\"div\", {\n    key: comment._id,\n    style: {\n      marginBottom: \"20px\"\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/photos/${comment.photo.user_id}`\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/${comment.photo.file_name}`,\n    alt: \"Thumbnail\",\n    style: {\n      width: \"100px\"\n    },\n    onError: handleImageError\n  })), /*#__PURE__*/React.createElement(\"p\", null, `${comment.comment} - (${new Date(comment.date_time).toLocaleString()})`), isLoggedIn && comment.photo._id === selectedPhotoId && /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: commentText,\n    onChange: e => setCommentText(e.target.value),\n    placeholder: \"Nhập bình luận...\",\n    style: {\n      padding: \"5px\",\n      marginRight: \"10px\"\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleCommentSubmit(comment.photo._id),\n    style: {\n      padding: \"5px 10px\",\n      backgroundColor: \"#007bff\",\n      color: \"white\",\n      border: \"none\",\n      borderRadius: \"5px\"\n    }\n  }, \"Gửi\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSelectedPhotoId(null),\n    style: {\n      padding: \"5px 10px\",\n      backgroundColor: \"#dc3545\",\n      color: \"white\",\n      border: \"none\",\n      borderRadius: \"5px\",\n      marginLeft: \"10px\"\n    }\n  }, \"Hủy\")), isLoggedIn && comment.photo._id !== selectedPhotoId && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSelectedPhotoId(comment.photo._id),\n    style: {\n      padding: \"5px 10px\",\n      backgroundColor: \"#28a745\",\n      color: \"white\",\n      border: \"none\",\n      borderRadius: \"5px\"\n    }\n  }, \"Thêm Bình luận\"))));\n};\n_s(UserComments, \"kQ0AUeIR1T8wR623yawUzm2ncJY=\");\n_c = UserComments;\nexport default UserComments;\nvar _c;\n$RefreshReg$(_c, \"UserComments\");","map":{"version":3,"names":["React","useState","useEffect","fetchModel","Link","UserComments","userId","isLoggedIn","_s","commentsWithPhotos","setCommentsWithPhotos","commentText","setCommentText","selectedPhotoId","setSelectedPhotoId","then","data","comments","forEach","photo","comment","user","_id","push","handleImageError","e","target","src","handleCommentSubmit","photoId","alert","console","log","createElement","length","map","key","style","marginBottom","to","user_id","file_name","alt","width","onError","Date","date_time","toLocaleString","type","value","onChange","placeholder","padding","marginRight","onClick","backgroundColor","color","border","borderRadius","marginLeft","_c","$RefreshReg$"],"sources":["I:/CODE/LTW/TH3/photo-sharing-app/frontend/src/components/UserComments/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchModel } from \"../../lib/fetchModelData\";\nimport { Link } from \"react-router-dom\";\n\nconst UserComments = ({ userId, isLoggedIn }) => {\n  const [commentsWithPhotos, setCommentsWithPhotos] = useState([]);\n  const [commentText, setCommentText] = useState(\"\");\n  const [selectedPhotoId, setSelectedPhotoId] = useState(null);\n\n  useEffect(() => {\n    fetchModel(`/photos/photosOfUser/${userId}`).then((data) => {\n      const comments = [];\n      (data || []).forEach((photo) => {\n        photo.comments.forEach((comment) => {\n          if (comment.user._id === userId) {\n            comments.push({ ...comment, photo });\n          }\n        });\n      });\n      setCommentsWithPhotos(comments);\n    });\n  }, [userId]);\n\n  const handleImageError = (e) => {\n    e.target.src = \"https://via.placeholder.com/100\";\n  };\n\n  const handleCommentSubmit = (photoId) => {\n    if (!isLoggedIn) {\n      alert(\"Vui lòng đăng nhập để bình luận.\");\n      return;\n    }\n    console.log(`Gửi bình luận \"${commentText}\" cho ảnh ${photoId}`);\n    setCommentText(\"\");\n    setSelectedPhotoId(null);\n  };\n\n  return React.createElement(\n    \"div\",\n    null,\n    React.createElement(\"h2\", null, \"Bình luận của người dùng\"),\n    commentsWithPhotos.length === 0\n      ? React.createElement(\"p\", null, \"Không có bình luận nào.\")\n      : commentsWithPhotos.map((comment) =>\n          React.createElement(\n            \"div\",\n            { key: comment._id, style: { marginBottom: \"20px\" } },\n            React.createElement(\n              Link,\n              { to: `/photos/${comment.photo.user_id}` },\n              React.createElement(\"img\", {\n                src: `/images/${comment.photo.file_name}`,\n                alt: \"Thumbnail\",\n                style: { width: \"100px\" },\n                onError: handleImageError,\n              })\n            ),\n            React.createElement(\n              \"p\",\n              null,\n              `${comment.comment} - (${new Date(\n                comment.date_time\n              ).toLocaleString()})`\n            ),\n            isLoggedIn &&\n              comment.photo._id === selectedPhotoId &&\n              React.createElement(\n                \"div\",\n                null,\n                React.createElement(\"input\", {\n                  type: \"text\",\n                  value: commentText,\n                  onChange: (e) => setCommentText(e.target.value),\n                  placeholder: \"Nhập bình luận...\",\n                  style: { padding: \"5px\", marginRight: \"10px\" },\n                }),\n                React.createElement(\n                  \"button\",\n                  {\n                    onClick: () => handleCommentSubmit(comment.photo._id),\n                    style: {\n                      padding: \"5px 10px\",\n                      backgroundColor: \"#007bff\",\n                      color: \"white\",\n                      border: \"none\",\n                      borderRadius: \"5px\",\n                    },\n                  },\n                  \"Gửi\"\n                ),\n                React.createElement(\n                  \"button\",\n                  {\n                    onClick: () => setSelectedPhotoId(null),\n                    style: {\n                      padding: \"5px 10px\",\n                      backgroundColor: \"#dc3545\",\n                      color: \"white\",\n                      border: \"none\",\n                      borderRadius: \"5px\",\n                      marginLeft: \"10px\",\n                    },\n                  },\n                  \"Hủy\"\n                )\n              ),\n            isLoggedIn &&\n              comment.photo._id !== selectedPhotoId &&\n              React.createElement(\n                \"button\",\n                {\n                  onClick: () => setSelectedPhotoId(comment.photo._id),\n                  style: {\n                    padding: \"5px 10px\",\n                    backgroundColor: \"#28a745\",\n                    color: \"white\",\n                    border: \"none\",\n                    borderRadius: \"5px\",\n                  },\n                },\n                \"Thêm Bình luận\"\n              )\n          )\n        )\n  );\n};\n\nexport default UserComments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}